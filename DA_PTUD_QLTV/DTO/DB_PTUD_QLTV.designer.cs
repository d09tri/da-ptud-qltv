#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_PTUD_QLTV")]
	public partial class DB_PTUD_QLTVDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietMuonTra(ChiTietMuonTra instance);
    partial void UpdateChiTietMuonTra(ChiTietMuonTra instance);
    partial void DeleteChiTietMuonTra(ChiTietMuonTra instance);
    partial void InsertDocGia(DocGia instance);
    partial void UpdateDocGia(DocGia instance);
    partial void DeleteDocGia(DocGia instance);
    partial void InsertMuonTra(MuonTra instance);
    partial void UpdateMuonTra(MuonTra instance);
    partial void DeleteMuonTra(MuonTra instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertSach(Sach instance);
    partial void UpdateSach(Sach instance);
    partial void DeleteSach(Sach instance);
    partial void InsertSachTacGia(SachTacGia instance);
    partial void UpdateSachTacGia(SachTacGia instance);
    partial void DeleteSachTacGia(SachTacGia instance);
    partial void InsertTacGia(TacGia instance);
    partial void UpdateTacGia(TacGia instance);
    partial void DeleteTacGia(TacGia instance);
    partial void InsertTheLoai(TheLoai instance);
    partial void UpdateTheLoai(TheLoai instance);
    partial void DeleteTheLoai(TheLoai instance);
    partial void InsertTheThuVien(TheThuVien instance);
    partial void UpdateTheThuVien(TheThuVien instance);
    partial void DeleteTheThuVien(TheThuVien instance);
    #endregion
		
		public DB_PTUD_QLTVDataContext() : 
				base(global::DTO.Properties.Settings.Default.DB_PTUD_QLTVConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DB_PTUD_QLTVDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_PTUD_QLTVDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_PTUD_QLTVDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_PTUD_QLTVDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietMuonTra> ChiTietMuonTras
		{
			get
			{
				return this.GetTable<ChiTietMuonTra>();
			}
		}
		
		public System.Data.Linq.Table<DocGia> DocGias
		{
			get
			{
				return this.GetTable<DocGia>();
			}
		}
		
		public System.Data.Linq.Table<MuonTra> MuonTras
		{
			get
			{
				return this.GetTable<MuonTra>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<Sach> Saches
		{
			get
			{
				return this.GetTable<Sach>();
			}
		}
		
		public System.Data.Linq.Table<SachTacGia> SachTacGias
		{
			get
			{
				return this.GetTable<SachTacGia>();
			}
		}
		
		public System.Data.Linq.Table<TacGia> TacGias
		{
			get
			{
				return this.GetTable<TacGia>();
			}
		}
		
		public System.Data.Linq.Table<TheLoai> TheLoais
		{
			get
			{
				return this.GetTable<TheLoai>();
			}
		}
		
		public System.Data.Linq.Table<TheThuVien> TheThuViens
		{
			get
			{
				return this.GetTable<TheThuVien>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietMuonTra")]
	public partial class ChiTietMuonTra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaMuonTra;
		
		private int _MaSach;
		
		private string _GhiChu;
		
		private System.Nullable<bool> _DaTra;
		
		private System.Nullable<System.DateTime> _NgayTra;
		
		private EntityRef<MuonTra> _MuonTra;
		
		private EntityRef<Sach> _Sach;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMuonTraChanging(int value);
    partial void OnMaMuonTraChanged();
    partial void OnMaSachChanging(int value);
    partial void OnMaSachChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnDaTraChanging(System.Nullable<bool> value);
    partial void OnDaTraChanged();
    partial void OnNgayTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTraChanged();
    #endregion
		
		public ChiTietMuonTra()
		{
			this._MuonTra = default(EntityRef<MuonTra>);
			this._Sach = default(EntityRef<Sach>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMuonTra", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaMuonTra
		{
			get
			{
				return this._MaMuonTra;
			}
			set
			{
				if ((this._MaMuonTra != value))
				{
					if (this._MuonTra.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMuonTraChanging(value);
					this.SendPropertyChanging();
					this._MaMuonTra = value;
					this.SendPropertyChanged("MaMuonTra");
					this.OnMaMuonTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					if (this._Sach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(100)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaTra", DbType="Bit")]
		public System.Nullable<bool> DaTra
		{
			get
			{
				return this._DaTra;
			}
			set
			{
				if ((this._DaTra != value))
				{
					this.OnDaTraChanging(value);
					this.SendPropertyChanging();
					this._DaTra = value;
					this.SendPropertyChanged("DaTra");
					this.OnDaTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTra", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTra
		{
			get
			{
				return this._NgayTra;
			}
			set
			{
				if ((this._NgayTra != value))
				{
					this.OnNgayTraChanging(value);
					this.SendPropertyChanging();
					this._NgayTra = value;
					this.SendPropertyChanged("NgayTra");
					this.OnNgayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MuonTra_ChiTietMuonTra", Storage="_MuonTra", ThisKey="MaMuonTra", OtherKey="MaMuonTra", IsForeignKey=true)]
		public MuonTra MuonTra
		{
			get
			{
				return this._MuonTra.Entity;
			}
			set
			{
				MuonTra previousValue = this._MuonTra.Entity;
				if (((previousValue != value) 
							|| (this._MuonTra.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MuonTra.Entity = null;
						previousValue.ChiTietMuonTras.Remove(this);
					}
					this._MuonTra.Entity = value;
					if ((value != null))
					{
						value.ChiTietMuonTras.Add(this);
						this._MaMuonTra = value.MaMuonTra;
					}
					else
					{
						this._MaMuonTra = default(int);
					}
					this.SendPropertyChanged("MuonTra");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_ChiTietMuonTra", Storage="_Sach", ThisKey="MaSach", OtherKey="MaSach", IsForeignKey=true)]
		public Sach Sach
		{
			get
			{
				return this._Sach.Entity;
			}
			set
			{
				Sach previousValue = this._Sach.Entity;
				if (((previousValue != value) 
							|| (this._Sach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sach.Entity = null;
						previousValue.ChiTietMuonTras.Remove(this);
					}
					this._Sach.Entity = value;
					if ((value != null))
					{
						value.ChiTietMuonTras.Add(this);
						this._MaSach = value.MaSach;
					}
					else
					{
						this._MaSach = default(int);
					}
					this.SendPropertyChanged("Sach");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocGia")]
	public partial class DocGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDocGia;
		
		private string _TenDocGia;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _SoDienThoai;
		
		private System.Nullable<int> _MaThe;
		
		private EntityRef<TheThuVien> _TheThuVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDocGiaChanging(int value);
    partial void OnMaDocGiaChanged();
    partial void OnTenDocGiaChanging(string value);
    partial void OnTenDocGiaChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnMaTheChanging(System.Nullable<int> value);
    partial void OnMaTheChanged();
    #endregion
		
		public DocGia()
		{
			this._TheThuVien = default(EntityRef<TheThuVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDocGia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDocGia
		{
			get
			{
				return this._MaDocGia;
			}
			set
			{
				if ((this._MaDocGia != value))
				{
					this.OnMaDocGiaChanging(value);
					this.SendPropertyChanging();
					this._MaDocGia = value;
					this.SendPropertyChanged("MaDocGia");
					this.OnMaDocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDocGia", DbType="NVarChar(100)")]
		public string TenDocGia
		{
			get
			{
				return this._TenDocGia;
			}
			set
			{
				if ((this._TenDocGia != value))
				{
					this.OnTenDocGiaChanging(value);
					this.SendPropertyChanging();
					this._TenDocGia = value;
					this.SendPropertyChanged("TenDocGia");
					this.OnTenDocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(10)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="Int")]
		public System.Nullable<int> MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					if (this._TheThuVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheThuVien_DocGia", Storage="_TheThuVien", ThisKey="MaThe", OtherKey="MaThe", IsForeignKey=true)]
		public TheThuVien TheThuVien
		{
			get
			{
				return this._TheThuVien.Entity;
			}
			set
			{
				TheThuVien previousValue = this._TheThuVien.Entity;
				if (((previousValue != value) 
							|| (this._TheThuVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheThuVien.Entity = null;
						previousValue.DocGias.Remove(this);
					}
					this._TheThuVien.Entity = value;
					if ((value != null))
					{
						value.DocGias.Add(this);
						this._MaThe = value.MaThe;
					}
					else
					{
						this._MaThe = default(Nullable<int>);
					}
					this.SendPropertyChanged("TheThuVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MuonTra")]
	public partial class MuonTra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaMuonTra;
		
		private System.Nullable<int> _MaThe;
		
		private System.Nullable<int> _MaNhanVien;
		
		private System.Nullable<System.DateTime> _NgayMuon;
		
		private System.Nullable<bool> _TinhTrang;
		
		private EntitySet<ChiTietMuonTra> _ChiTietMuonTras;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<TheThuVien> _TheThuVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMuonTraChanging(int value);
    partial void OnMaMuonTraChanged();
    partial void OnMaTheChanging(System.Nullable<int> value);
    partial void OnMaTheChanged();
    partial void OnMaNhanVienChanging(System.Nullable<int> value);
    partial void OnMaNhanVienChanged();
    partial void OnNgayMuonChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayMuonChanged();
    partial void OnTinhTrangChanging(System.Nullable<bool> value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public MuonTra()
		{
			this._ChiTietMuonTras = new EntitySet<ChiTietMuonTra>(new Action<ChiTietMuonTra>(this.attach_ChiTietMuonTras), new Action<ChiTietMuonTra>(this.detach_ChiTietMuonTras));
			this._NhanVien = default(EntityRef<NhanVien>);
			this._TheThuVien = default(EntityRef<TheThuVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMuonTra", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaMuonTra
		{
			get
			{
				return this._MaMuonTra;
			}
			set
			{
				if ((this._MaMuonTra != value))
				{
					this.OnMaMuonTraChanging(value);
					this.SendPropertyChanging();
					this._MaMuonTra = value;
					this.SendPropertyChanged("MaMuonTra");
					this.OnMaMuonTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="Int")]
		public System.Nullable<int> MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					if (this._TheThuVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhanVien", DbType="Int")]
		public System.Nullable<int> MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayMuon", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayMuon
		{
			get
			{
				return this._NgayMuon;
			}
			set
			{
				if ((this._NgayMuon != value))
				{
					this.OnNgayMuonChanging(value);
					this.SendPropertyChanging();
					this._NgayMuon = value;
					this.SendPropertyChanged("NgayMuon");
					this.OnNgayMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit")]
		public System.Nullable<bool> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MuonTra_ChiTietMuonTra", Storage="_ChiTietMuonTras", ThisKey="MaMuonTra", OtherKey="MaMuonTra")]
		public EntitySet<ChiTietMuonTra> ChiTietMuonTras
		{
			get
			{
				return this._ChiTietMuonTras;
			}
			set
			{
				this._ChiTietMuonTras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_MuonTra", Storage="_NhanVien", ThisKey="MaNhanVien", OtherKey="MaNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.MuonTras.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.MuonTras.Add(this);
						this._MaNhanVien = value.MaNhanVien;
					}
					else
					{
						this._MaNhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheThuVien_MuonTra", Storage="_TheThuVien", ThisKey="MaThe", OtherKey="MaThe", IsForeignKey=true)]
		public TheThuVien TheThuVien
		{
			get
			{
				return this._TheThuVien.Entity;
			}
			set
			{
				TheThuVien previousValue = this._TheThuVien.Entity;
				if (((previousValue != value) 
							|| (this._TheThuVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheThuVien.Entity = null;
						previousValue.MuonTras.Remove(this);
					}
					this._TheThuVien.Entity = value;
					if ((value != null))
					{
						value.MuonTras.Add(this);
						this._MaThe = value.MaThe;
					}
					else
					{
						this._MaThe = default(Nullable<int>);
					}
					this.SendPropertyChanged("TheThuVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietMuonTras(ChiTietMuonTra entity)
		{
			this.SendPropertyChanging();
			entity.MuonTra = this;
		}
		
		private void detach_ChiTietMuonTras(ChiTietMuonTra entity)
		{
			this.SendPropertyChanging();
			entity.MuonTra = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNhanVien;
		
		private string _TenNhanVien;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _SoDienThoai;
		
		private EntitySet<MuonTra> _MuonTras;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhanVienChanging(int value);
    partial void OnMaNhanVienChanged();
    partial void OnTenNhanVienChanging(string value);
    partial void OnTenNhanVienChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    #endregion
		
		public NhanVien()
		{
			this._MuonTras = new EntitySet<MuonTra>(new Action<MuonTra>(this.attach_MuonTras), new Action<MuonTra>(this.detach_MuonTras));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhanVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhanVien", DbType="NVarChar(100)")]
		public string TenNhanVien
		{
			get
			{
				return this._TenNhanVien;
			}
			set
			{
				if ((this._TenNhanVien != value))
				{
					this.OnTenNhanVienChanging(value);
					this.SendPropertyChanging();
					this._TenNhanVien = value;
					this.SendPropertyChanged("TenNhanVien");
					this.OnTenNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(10)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_MuonTra", Storage="_MuonTras", ThisKey="MaNhanVien", OtherKey="MaNhanVien")]
		public EntitySet<MuonTra> MuonTras
		{
			get
			{
				return this._MuonTras;
			}
			set
			{
				this._MuonTras.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MuonTras(MuonTra entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_MuonTras(MuonTra entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sach")]
	public partial class Sach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSach;
		
		private string _TenSach;
		
		private string _BiaSach;
		
		private System.Nullable<int> _MaTheLoai;
		
		private System.Nullable<System.DateTime> _NamXuatBan;
		
		private System.Nullable<int> _SoLuongSach;
		
		private EntitySet<ChiTietMuonTra> _ChiTietMuonTras;
		
		private EntitySet<SachTacGia> _SachTacGias;
		
		private EntityRef<TheLoai> _TheLoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSachChanging(int value);
    partial void OnMaSachChanged();
    partial void OnTenSachChanging(string value);
    partial void OnTenSachChanged();
    partial void OnBiaSachChanging(string value);
    partial void OnBiaSachChanged();
    partial void OnMaTheLoaiChanging(System.Nullable<int> value);
    partial void OnMaTheLoaiChanged();
    partial void OnNamXuatBanChanging(System.Nullable<System.DateTime> value);
    partial void OnNamXuatBanChanged();
    partial void OnSoLuongSachChanging(System.Nullable<int> value);
    partial void OnSoLuongSachChanged();
    #endregion
		
		public Sach()
		{
			this._ChiTietMuonTras = new EntitySet<ChiTietMuonTra>(new Action<ChiTietMuonTra>(this.attach_ChiTietMuonTras), new Action<ChiTietMuonTra>(this.detach_ChiTietMuonTras));
			this._SachTacGias = new EntitySet<SachTacGia>(new Action<SachTacGia>(this.attach_SachTacGias), new Action<SachTacGia>(this.detach_SachTacGias));
			this._TheLoai = default(EntityRef<TheLoai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSach", DbType="NVarChar(100)")]
		public string TenSach
		{
			get
			{
				return this._TenSach;
			}
			set
			{
				if ((this._TenSach != value))
				{
					this.OnTenSachChanging(value);
					this.SendPropertyChanging();
					this._TenSach = value;
					this.SendPropertyChanged("TenSach");
					this.OnTenSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BiaSach", DbType="NVarChar(100)")]
		public string BiaSach
		{
			get
			{
				return this._BiaSach;
			}
			set
			{
				if ((this._BiaSach != value))
				{
					this.OnBiaSachChanging(value);
					this.SendPropertyChanging();
					this._BiaSach = value;
					this.SendPropertyChanged("BiaSach");
					this.OnBiaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTheLoai", DbType="Int")]
		public System.Nullable<int> MaTheLoai
		{
			get
			{
				return this._MaTheLoai;
			}
			set
			{
				if ((this._MaTheLoai != value))
				{
					if (this._TheLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaTheLoai = value;
					this.SendPropertyChanged("MaTheLoai");
					this.OnMaTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamXuatBan", DbType="DateTime")]
		public System.Nullable<System.DateTime> NamXuatBan
		{
			get
			{
				return this._NamXuatBan;
			}
			set
			{
				if ((this._NamXuatBan != value))
				{
					this.OnNamXuatBanChanging(value);
					this.SendPropertyChanging();
					this._NamXuatBan = value;
					this.SendPropertyChanged("NamXuatBan");
					this.OnNamXuatBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongSach", DbType="Int")]
		public System.Nullable<int> SoLuongSach
		{
			get
			{
				return this._SoLuongSach;
			}
			set
			{
				if ((this._SoLuongSach != value))
				{
					this.OnSoLuongSachChanging(value);
					this.SendPropertyChanging();
					this._SoLuongSach = value;
					this.SendPropertyChanged("SoLuongSach");
					this.OnSoLuongSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_ChiTietMuonTra", Storage="_ChiTietMuonTras", ThisKey="MaSach", OtherKey="MaSach")]
		public EntitySet<ChiTietMuonTra> ChiTietMuonTras
		{
			get
			{
				return this._ChiTietMuonTras;
			}
			set
			{
				this._ChiTietMuonTras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_SachTacGia", Storage="_SachTacGias", ThisKey="MaSach", OtherKey="MaSach")]
		public EntitySet<SachTacGia> SachTacGias
		{
			get
			{
				return this._SachTacGias;
			}
			set
			{
				this._SachTacGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_Sach", Storage="_TheLoai", ThisKey="MaTheLoai", OtherKey="MaTheLoai", IsForeignKey=true)]
		public TheLoai TheLoai
		{
			get
			{
				return this._TheLoai.Entity;
			}
			set
			{
				TheLoai previousValue = this._TheLoai.Entity;
				if (((previousValue != value) 
							|| (this._TheLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheLoai.Entity = null;
						previousValue.Saches.Remove(this);
					}
					this._TheLoai.Entity = value;
					if ((value != null))
					{
						value.Saches.Add(this);
						this._MaTheLoai = value.MaTheLoai;
					}
					else
					{
						this._MaTheLoai = default(Nullable<int>);
					}
					this.SendPropertyChanged("TheLoai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietMuonTras(ChiTietMuonTra entity)
		{
			this.SendPropertyChanging();
			entity.Sach = this;
		}
		
		private void detach_ChiTietMuonTras(ChiTietMuonTra entity)
		{
			this.SendPropertyChanging();
			entity.Sach = null;
		}
		
		private void attach_SachTacGias(SachTacGia entity)
		{
			this.SendPropertyChanging();
			entity.Sach = this;
		}
		
		private void detach_SachTacGias(SachTacGia entity)
		{
			this.SendPropertyChanging();
			entity.Sach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SachTacGia")]
	public partial class SachTacGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSach;
		
		private int _MaTacGia;
		
		private EntityRef<Sach> _Sach;
		
		private EntityRef<TacGia> _TacGia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSachChanging(int value);
    partial void OnMaSachChanged();
    partial void OnMaTacGiaChanging(int value);
    partial void OnMaTacGiaChanged();
    #endregion
		
		public SachTacGia()
		{
			this._Sach = default(EntityRef<Sach>);
			this._TacGia = default(EntityRef<TacGia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					if (this._Sach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTacGia", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTacGia
		{
			get
			{
				return this._MaTacGia;
			}
			set
			{
				if ((this._MaTacGia != value))
				{
					if (this._TacGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTacGiaChanging(value);
					this.SendPropertyChanging();
					this._MaTacGia = value;
					this.SendPropertyChanged("MaTacGia");
					this.OnMaTacGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_SachTacGia", Storage="_Sach", ThisKey="MaSach", OtherKey="MaSach", IsForeignKey=true)]
		public Sach Sach
		{
			get
			{
				return this._Sach.Entity;
			}
			set
			{
				Sach previousValue = this._Sach.Entity;
				if (((previousValue != value) 
							|| (this._Sach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sach.Entity = null;
						previousValue.SachTacGias.Remove(this);
					}
					this._Sach.Entity = value;
					if ((value != null))
					{
						value.SachTacGias.Add(this);
						this._MaSach = value.MaSach;
					}
					else
					{
						this._MaSach = default(int);
					}
					this.SendPropertyChanged("Sach");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TacGia_SachTacGia", Storage="_TacGia", ThisKey="MaTacGia", OtherKey="MaTacGia", IsForeignKey=true)]
		public TacGia TacGia
		{
			get
			{
				return this._TacGia.Entity;
			}
			set
			{
				TacGia previousValue = this._TacGia.Entity;
				if (((previousValue != value) 
							|| (this._TacGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TacGia.Entity = null;
						previousValue.SachTacGias.Remove(this);
					}
					this._TacGia.Entity = value;
					if ((value != null))
					{
						value.SachTacGias.Add(this);
						this._MaTacGia = value.MaTacGia;
					}
					else
					{
						this._MaTacGia = default(int);
					}
					this.SendPropertyChanged("TacGia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TacGia")]
	public partial class TacGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTacGia;
		
		private string _TenTacGia;
		
		private EntitySet<SachTacGia> _SachTacGias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTacGiaChanging(int value);
    partial void OnMaTacGiaChanged();
    partial void OnTenTacGiaChanging(string value);
    partial void OnTenTacGiaChanged();
    #endregion
		
		public TacGia()
		{
			this._SachTacGias = new EntitySet<SachTacGia>(new Action<SachTacGia>(this.attach_SachTacGias), new Action<SachTacGia>(this.detach_SachTacGias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTacGia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTacGia
		{
			get
			{
				return this._MaTacGia;
			}
			set
			{
				if ((this._MaTacGia != value))
				{
					this.OnMaTacGiaChanging(value);
					this.SendPropertyChanging();
					this._MaTacGia = value;
					this.SendPropertyChanged("MaTacGia");
					this.OnMaTacGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTacGia", DbType="NVarChar(100)")]
		public string TenTacGia
		{
			get
			{
				return this._TenTacGia;
			}
			set
			{
				if ((this._TenTacGia != value))
				{
					this.OnTenTacGiaChanging(value);
					this.SendPropertyChanging();
					this._TenTacGia = value;
					this.SendPropertyChanged("TenTacGia");
					this.OnTenTacGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TacGia_SachTacGia", Storage="_SachTacGias", ThisKey="MaTacGia", OtherKey="MaTacGia")]
		public EntitySet<SachTacGia> SachTacGias
		{
			get
			{
				return this._SachTacGias;
			}
			set
			{
				this._SachTacGias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SachTacGias(SachTacGia entity)
		{
			this.SendPropertyChanging();
			entity.TacGia = this;
		}
		
		private void detach_SachTacGias(SachTacGia entity)
		{
			this.SendPropertyChanging();
			entity.TacGia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheLoai")]
	public partial class TheLoai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTheLoai;
		
		private string _TenTheLoai;
		
		private EntitySet<Sach> _Saches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheLoaiChanging(int value);
    partial void OnMaTheLoaiChanged();
    partial void OnTenTheLoaiChanging(string value);
    partial void OnTenTheLoaiChanged();
    #endregion
		
		public TheLoai()
		{
			this._Saches = new EntitySet<Sach>(new Action<Sach>(this.attach_Saches), new Action<Sach>(this.detach_Saches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTheLoai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTheLoai
		{
			get
			{
				return this._MaTheLoai;
			}
			set
			{
				if ((this._MaTheLoai != value))
				{
					this.OnMaTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaTheLoai = value;
					this.SendPropertyChanged("MaTheLoai");
					this.OnMaTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTheLoai", DbType="NVarChar(100)")]
		public string TenTheLoai
		{
			get
			{
				return this._TenTheLoai;
			}
			set
			{
				if ((this._TenTheLoai != value))
				{
					this.OnTenTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenTheLoai = value;
					this.SendPropertyChanged("TenTheLoai");
					this.OnTenTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_Sach", Storage="_Saches", ThisKey="MaTheLoai", OtherKey="MaTheLoai")]
		public EntitySet<Sach> Saches
		{
			get
			{
				return this._Saches;
			}
			set
			{
				this._Saches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = this;
		}
		
		private void detach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheThuVien")]
	public partial class TheThuVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaThe;
		
		private System.Nullable<System.DateTime> _NgayBatDau;
		
		private System.Nullable<System.DateTime> _NgayHetHan;
		
		private string _GhiChu;
		
		private System.Nullable<bool> _TinhTrang;
		
		private EntitySet<DocGia> _DocGias;
		
		private EntitySet<MuonTra> _MuonTras;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheChanging(int value);
    partial void OnMaTheChanged();
    partial void OnNgayBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayHetHanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHetHanChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnTinhTrangChanging(System.Nullable<bool> value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public TheThuVien()
		{
			this._DocGias = new EntitySet<DocGia>(new Action<DocGia>(this.attach_DocGias), new Action<DocGia>(this.detach_DocGias));
			this._MuonTras = new EntitySet<MuonTra>(new Action<MuonTra>(this.attach_MuonTras), new Action<MuonTra>(this.detach_MuonTras));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHetHan", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayHetHan
		{
			get
			{
				return this._NgayHetHan;
			}
			set
			{
				if ((this._NgayHetHan != value))
				{
					this.OnNgayHetHanChanging(value);
					this.SendPropertyChanging();
					this._NgayHetHan = value;
					this.SendPropertyChanged("NgayHetHan");
					this.OnNgayHetHanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(100)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit")]
		public System.Nullable<bool> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheThuVien_DocGia", Storage="_DocGias", ThisKey="MaThe", OtherKey="MaThe")]
		public EntitySet<DocGia> DocGias
		{
			get
			{
				return this._DocGias;
			}
			set
			{
				this._DocGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheThuVien_MuonTra", Storage="_MuonTras", ThisKey="MaThe", OtherKey="MaThe")]
		public EntitySet<MuonTra> MuonTras
		{
			get
			{
				return this._MuonTras;
			}
			set
			{
				this._MuonTras.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DocGias(DocGia entity)
		{
			this.SendPropertyChanging();
			entity.TheThuVien = this;
		}
		
		private void detach_DocGias(DocGia entity)
		{
			this.SendPropertyChanging();
			entity.TheThuVien = null;
		}
		
		private void attach_MuonTras(MuonTra entity)
		{
			this.SendPropertyChanging();
			entity.TheThuVien = this;
		}
		
		private void detach_MuonTras(MuonTra entity)
		{
			this.SendPropertyChanging();
			entity.TheThuVien = null;
		}
	}
}
#pragma warning restore 1591
